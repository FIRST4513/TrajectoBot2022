// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: SequentialCommandGroup.

package robot.commands;
import edu.wpi.first.wpilibj2.command.SequentialCommandGroup;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import robot.subsystems.drivetrainSubSys;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

/**
 *
 */
public class driveTestForwardCmdGrp extends SequentialCommandGroup {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

    public driveTestForwardCmdGrp(drivetrainSubSys drivetrainSubSys){

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    addCommands(
        // Add Commands here:
        // Also add parallel commands using the
        //
        // addCommands(
        //      new command1(argsN, subsystem),
        //      parallel(
        //          new command2(argsN, subsystem),
        //          new command3(argsN, subsystem)
        //      )    
        //  );
        //    driveCmd(   dist,  pwr,    hdg,        mode,           timeOut,   brakeFlag,      subsystem)
        //new driveCmd(   96.0,  0.7,    10,   "CURRENT_HEADING",      5.0,      true,      drivetrainSubSys),
        
        //  drivePointTurnCmd(  rotation,     hdg,     brakeFlag, timeOut,        subsystem),

        /// DOUBLE RED RIGHT
        new driveCmd(-43, -0.5, 0, "CURRENT_HEADING", 5, true, drivetrainSubSys),
        new driveSwingTurnCmd(0.2, 0.5, 0, 45, "HDG", false, 5, drivetrainSubSys),
        new driveSwingTurnCmd(0.2, -0.5, 0, 10, "HDG", false, 5, drivetrainSubSys),
        new driveCmd(16, 0.5, 0, "NEW_HEADING", 2, true, drivetrainSubSys)

        /// SINGLE RED
        // new driveCmd(-44, -0.5, 0, "NEW_HEADING", 5, true, drivetrainSubSys),
        // new driveCmd(44, 0.5, 0, "NEW_HEADING", 5, true, drivetrainSubSys),
        // new driveSwingTurnCmd(0.25, -0.25, 30, -25, "DIST", true, 5, drivetrainSubSys)

        /// DOUBLE LEFT ROUTINE
        // new driveCmd(-57, -0.5, 0, "CURRENT_HEADING", 6, true, drivetrainSubSys),
        // new driveCmd(57, 0.5, 0, "CURRENT_HEADING", 6, true, drivetrainSubSys),
        // new drivePointTurnCmd(-0.15, -10.0, true, 5, drivetrainSubSys)
        
        //new driveSwingTurnCmd(speed, rotation, dist,  hdg,   mode,    brakeFlag, timeOut,         subsystem)
        //new driveSwingTurnCmd(   -0.5,    -0.2,     0.0,  -15.0,  "HDG",     true,       5.0,       drivetrainSubSys)
        //new driveSwingTurnCmd(  -0.5,    -0.2,   -30.0,    0,  "HDG",     true,       5.0,       drivetrainSubSys)

        //new driveSwingTurnCmd(0.5, 0.35, 30, 25, "HDG", false, 5, drivetrainSubSys),
        //new driveSwingTurnCmd(0.35, 0.5, 30, 0, "HDG", false, 5, drivetrainSubSys)
        );
    }

    @Override
    public boolean runsWhenDisabled() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
        return false;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
    }
}
